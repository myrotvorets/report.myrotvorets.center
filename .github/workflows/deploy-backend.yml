name: Deploy Backend

on:
  push:
    branches:
      - master
    paths:
      - "functions/**"
      - ".github/workflows/deploy-backend.yml"
  workflow_dispatch:

permissions:
  contents: read

jobs:
  deploy-backend:
    name: Deploy
    runs-on: ubuntu-latest
    permissions:
      contents: read
      deployments: write
    steps:
      - name: Check out the source code
        uses: actions/checkout@3df4ab11eba7bda6032a0b82a6bb43b11571feac # v4.0.0

      - name: Setup Node.js environment
        uses: actions/setup-node@5e21ff4d9bc1a8cf6de233a3057d20ec6b3fb69d # v3.8.1
        with:
          node-version: '16'
          cache: npm
          cache-dependency-path: functions/package-lock.json

      - name: Install firebase-tools
        run: npm i -g firebase-tools

      - name: Install dependencies
        run: npm ci --ignore-scripts
        working-directory: functions
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Run postinstall scripts
        run: npm rebuild && npm run prepare --if-present
        working-directory: functions

      - name: Start deployment
        uses: chrnorm/deployment-action@d42cde7132fcec920de534fffc3be83794335c00 # v2.0.5
        id: deployment
        with:
          token: "${{ github.token }}"
          environment: production/functions

      - name: Deploy functions to Firebase
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
        run: firebase deploy --only functions

      - name: Update deployment status (success)
        if: success()
        uses: chrnorm/deployment-status@2afb7d27101260f4a764219439564d954d10b5b0 # tag=v2.0.1
        with:
          token: "${{ github.token }}"
          state: "success"
          deployment-id: ${{ steps.deployment.outputs.deployment_id }}

      - name: Update deployment status (failure)
        if: failure()
        uses: chrnorm/deployment-status@2afb7d27101260f4a764219439564d954d10b5b0 # tag=v2.0.1
        with:
          token: "${{ github.token }}"
          state: "failure"
          deployment-id: ${{ steps.deployment.outputs.deployment_id }}
