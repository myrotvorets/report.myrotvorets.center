name: Deploy Frontend

on:
  push:
    branches:
      - master
    paths:
      - "frontend/**"
      - ".github/workflows/deploy-frontend.yml"
  workflow_dispatch:

jobs:
  deploy-frontend:
    name: Deploy
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node_version: ['14']

    steps:
      - name: Check out the source code
        uses: actions/checkout@v2.3.4

      - name: Retrieve tags
        run: git fetch --unshallow --tags

      - name: Setup Node.js environment
        uses: actions/setup-node@v2.3.2
        with:
          node-version: ${{ matrix.node_version }}

      - name: Update npm and install firebase-tools
        run: npm i -g npm@latest firebase-tools

      - name: Cache node modules
        uses: actions/cache@v2.1.6
        env:
          cache-name: cache-node-modules-fe
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ matrix.node_version }}-${{ hashFiles('frontend/package-lock.json') }}

      - name: Install dependencies
        run: npm ci --ignore-scripts
        working-directory: frontend
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Run postinstall scripts
        run: npm rebuild && npm run prepare --if-present
        working-directory: frontend

      - name: Build frontend
        run: npm run build
        working-directory: frontend

      - name: Start deployment
        uses: chrnorm/deployment-action@v1.2.0
        id: deployment
        with:
          token: "${{ github.token }}"
          environment: production/hosting

      - name: Deploy to Firebase hosting
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
        run: firebase deploy --only hosting

      - name: Update deployment status (success)
        if: success()
        uses: chrnorm/deployment-status@v1.0.0
        with:
          token: "${{ github.token }}"
          state: "success"
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}

      - name: Update deployment status (failure)
        if: failure()
        uses: chrnorm/deployment-status@v1.0.0
        with:
          token: "${{ github.token }}"
          state: "failure"
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}
