name: Deploy Frontend

on:
  push:
    branches:
      - master
    paths:
      - "frontend/**"
      - ".github/workflows/deploy-frontend.yml"
  workflow_dispatch:

jobs:
  deploy-frontend:
    name: Deploy
    runs-on: ubuntu-latest
    steps:
      - name: Check out the source code
        uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b # tag=v3.0.2

      - name: Retrieve tags
        run: git fetch --unshallow --tags

      - name: Setup Node.js environment
        uses: actions/setup-node@17f8bd926464a1afa4c6a11669539e9c1ba77048 # tag=v3.2.0
        with:
          node-version: lts/*
          cache: npm
          cache-dependency-path: frontend/package-lock.json

      - name: Install firebase-tools
        run: npm i -g firebase-tools

      - name: Install dependencies
        run: npm ci --ignore-scripts
        working-directory: frontend
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Run postinstall scripts
        run: npm rebuild && npm run prepare --if-present
        working-directory: frontend

      - name: Build frontend
        run: npm run build
        working-directory: frontend

      - name: Start deployment
        uses: chrnorm/deployment-action@b11a06a2139d08ec1820b1e13efad139776155a6 # tag=v2.0.2
        id: deployment
        with:
          token: "${{ github.token }}"
          environment: production/hosting

      - name: Deploy to Firebase hosting
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
        run: firebase deploy --only hosting

      - name: Update deployment status (success)
        if: success()
        uses: chrnorm/deployment-status@07b3930847f65e71c9c6802ff5a402f6dfb46b86 # tag=v2.0.0
        with:
          token: "${{ github.token }}"
          state: "success"
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}

      - name: Update deployment status (failure)
        if: failure()
        uses: chrnorm/deployment-status@07b3930847f65e71c9c6802ff5a402f6dfb46b86 # tag=v2.0.0
        with:
          token: "${{ github.token }}"
          state: "failure"
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}
