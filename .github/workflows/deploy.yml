name: Deployment

on:
  push:
    branches: [ master ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - run: git fetch --unshallow --tags

    - name: Setup Node.js environment
      uses: actions/setup-node@v2.1.0
      with:
        node-version: 10

    - run: echo "//npm.pkg.github.com/:_authToken=${{ secrets.NPMRC_AUTH_TOKEN }}" >> frontend/.npmrc
    - run: echo "//npm.pkg.github.com/:_authToken=${{ secrets.NPMRC_AUTH_TOKEN }}" >> functions/.npmrc

    - name: Install dependencies (frontend)
      run: cd frontend && npm ci

    - name: Install dependencies (backend)
      run: cd functions && npm ci

    - name: Build (frontend)
      run: cd frontend && npm run build

    - name: Build (backend)
      run: cd functions && npm run build

    - name: Start deployment
      uses: chrnorm/deployment-action@v1.2.0
      id: deployment
      with:
        token: "${{ github.token }}"
        environment: production

    - name: Deploy
      env:
        FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
      run: firebase deploy

    - name: Update deployment status (success)
      if: success()
      uses: chrnorm/deployment-status@v1.0.0
      with:
        token: "${{ github.token }}"
        state: "success"
        deployment_id: ${{ steps.deployment.outputs.deployment_id }}

    - name: Update deployment status (failure)
      if: failure()
      uses: chrnorm/deployment-status@v1.0.0
      with:
        token: "${{ github.token }}"
        state: "failure"
        deployment_id: ${{ steps.deployment.outputs.deployment_id }}
